{
    "patches": [
        {
            "label": "2024-12-05_17-44-32",
            "content": "@@ -806,170 +806,28 @@\n     \n-if(this.money %3C= 0)%7B%0A            this.money = 0;%0A        %7D%0A        this.money += value; %0A    %7D%0A    toString(): string%7B%0A        return %60$%7Bthis.name%7D:$%7Bthis.money%7D%60\n+this.money = value; \n %0A   \n@@ -1304,374 +1304,74 @@\n me: \n-Pessoa %7C null): void%7B%0A       this.passenger = name;%0A    %7D%0A    public setDriver(name: Pessoa): void %7B%0A        this.driver = name;%0A    %7D%0A    public setCost(value: number): void%7B%0A        this.cost = value;%0A    %7D%0A    public drive(distance: number): void%7B%0A        this.setCost(distance)%0A    %7D%0A    public leavePass(): void%7B%0A        this.passenger?.setMoney(-this.getCost()\n+string, money: number): void%7B%0A        this.passenger?.setName(name\n );%0A \n@@ -1369,35 +1369,32 @@\n (name);%0A        \n-if(\n this.passenger?.\n@@ -1397,752 +1397,161 @@\n er?.\n-getMoney() != null)%7B%0A            if(this.passenger?.getMoney() %3C= 0)%7B%0A                console.log(%22fail: Passenger does not have enough money%22)%0A            %7D%0A        %7D%0A        this.driver?.setMoney(this.getCost());%0A        console.log(this.getPassenger() + %22leave%22);%0A        this.setCost(-this.getCost());%0A        this.setPassenger(null);%0A    %7D%0A    toString(): string %7B%0A        if(this.getDriver() == null) %7B%0A            return %60Cost: $%7Bthis.getCost()%7D, Driver: None, Passeng\n+setMoney(money);%0A    %7D%0A    public setDriver(name: string, money: numb\n er\n+)\n : \n-None%60;%0A        %7D%0A        if(this.getPassenger() == null) %7B%0A            return %60Cost: $%7Bthis.getCost()%7D, Driver: $%7Bthis.getDriver()%7D, Passenger: None%60;%0A        %7D%0A        return %60Cost: $%7Bthis.getCost()%7D, Driver: $%7Bthis.getDriver()%7D, Passenger: $%7Bthis.getPassenger()%7D%60\n+void %7B%0A        this.driver?.setName(name);%0A        this.driver?.setMoney(money)\n ;%0A  \n@@ -1555,16 +1555,17 @@\n %0A    %7D%0A%0A\n+%0A\n %7D%0A%0Aclass\n@@ -1579,38 +1579,8 @@\n r %7B%0A\n-    moto: Moto = new Moto();%0A%0A\n     \n@@ -1630,68 +1630,15 @@\n d %7B%0A\n-        this.moto.setDriver(new Pessoa(name, money));%0A\n     %7D%0A\n+%0A\n     \n@@ -1691,64 +1691,8 @@\n d %7B%0A\n-        this.moto.setPassenger(new Pessoa(name, money))%0A\n     \n@@ -1734,48 +1734,15 @@\n d %7B%0A\n-        this.moto.drive(distance)%0A\n     %7D%0A\n+%0A\n     \n@@ -1774,102 +1774,29 @@\n     \n-    this.moto.leavePass();%0A    %7D%0A%0A    show(): void %7B%0A        console.log(this.moto.toString())\n+%7D%0A%0A    show(): void %7B\n %0A   \n"
        },
        {
            "label": "2024-12-06_03-16-25",
            "content": "@@ -562,32 +562,37 @@\n etName(): string\n+%7Cnull\n %7B%0A        return\n@@ -630,32 +630,37 @@\n tMoney(): number\n+%7Cnull\n %7B%0A        return\n@@ -1371,16 +1371,23 @@\n : number\n+ %7C null\n %7B%0A      \n@@ -1888,16 +1888,17 @@\n assenger\n+?\n .getMone\n"
        },
        {
            "label": "2024-12-06_03-20-24",
            "content": "@@ -1968,53 +1968,8 @@\n y%22)%0A\n-                this.passenger?.setMoney(0);%0A\n     \n"
        },
        {
            "label": "2024-12-06_03-22-13",
            "content": "@@ -2123,17 +2123,16 @@\n er() + %22\n- \n leave%22);\n"
        },
        {
            "label": "2024-12-06_03-23-25",
            "content": "@@ -3247,16 +3247,17 @@\n input();\n+%0A\n         \n"
        },
        {
            "label": "2024-12-06_03-30-11",
            "content": "@@ -1619,17 +1619,16 @@\n is.cost \n-+\n = value;\n"
        },
        {
            "label": "2024-12-06_03-31-10",
            "content": "@@ -1707,17 +1707,16 @@\n istance)\n-;\n %0A    %7D%0A \n"
        },
        {
            "label": "2024-12-06_12-55-27",
            "content": "@@ -1427,24 +1427,31 @@\n name: Pessoa\n+ %7C null\n ): void%7B%0A   \n"
        },
        {
            "label": "2024-12-06_13-40-42",
            "content": "function input(): string { let X: any = input; X.L = X.L || require(\"fs\").readFileSync(0).toString().split(/\\r?\\n/); return X.L.shift(); } // _TEST_ONLY_\n//function input(): string { let X: any = input; X.P = X.P || require(\"readline-sync\"); return X.P.question() } // _FREE_ONLY_\nfunction write(text: any, endl=\"\\n\") { process.stdout.write(\"\" + text + endl); }\nexport {};\n\nclass Pessoa {\n    private name: string;\n    private money: number;\n\n    constructor(name: string, money: number){\n        this.name = name;\n        this.money = money;\n    }\n    public getName(): string{\n        return this.name;\n    }\n    public getMoney(): number{\n        return this.money;\n    }\n    public setName(value: string): void{\n        this.name = value;\n    }\n    public setMoney(value: number): void{\n        if(this.money <= 0){\n            this.money = 0;\n        }\n        this.money += value; \n    }\n    toString(): string{\n        return `${this.name}:${this.money}`\n    }\n}\nclass Moto{\n    private cost: number;\n    private driver: Pessoa| null;\n    private passenger: Pessoa | null; \n\n    constructor(){\n        this.cost = 0;\n        this.driver = null;\n        this.passenger = null;\n    }\n    public getPassenger(): Pessoa| null{\n        return this.passenger;\n    }\n    public getDriver(): Pessoa | null{\n        return this.driver;\n    }\n    public getCost(): number{\n        return this.cost;\n    }\n    public setPassenger(name: Pessoa): void{\n       this.passenger = name;\n    }\n    public setDriver(name: Pessoa): void {\n        this.driver = name;\n    }\n    public setCost(value: number): void{\n        this.cost += value;\n    }\n    public drive(distance: number): void{\n        this.setCost(distance);\n    }\n    public leavePass(): void{\n        this.passenger?.setMoney(-this.getCost());\n        if(this.passenger?.getMoney() != null){\n            if(this.passenger.getMoney() <= 0){\n                console.log(\"fail: Passenger does not have enough money\")\n                this.passenger?.setMoney(0);\n            }\n        }\n        this.driver?.setMoney(this.getCost());\n        console.log(this.getPassenger() + \" leave\");\n        this.setCost(-this.getCost());\n        this.setPassenger(null);\n    }\n    toString(): string {\n        if(this.getDriver() == null) {\n            return `Cost: ${this.getCost()}, Driver: None, Passenger: None`;\n        }\n        if(this.getPassenger() == null) {\n            return `Cost: ${this.getCost()}, Driver: ${this.getDriver()}, Passenger: None`;\n        }\n        return `Cost: ${this.getCost()}, Driver: ${this.getDriver()}, Passenger: ${this.getPassenger()}`;\n    }\n\n}\n\nclass Adapter {\n    moto: Moto = new Moto();\n\n    setDriver(name: string, money: number): void {\n        this.moto.setDriver(new Pessoa(name, money));\n    }\n    setPassenger(name: string, money: number): void {\n        this.moto.setPassenger(new Pessoa(name, money))\n    }\n\n    drive(distance: number): void {\n        this.moto.drive(distance)\n    }\n    leavePassenger(): void {\n        this.moto.leavePass();\n    }\n\n    show(): void {\n        console.log(this.moto.toString())\n    }\n}\n\nfunction main(): void {\n    let adapter: Adapter = new Adapter();\n    while (true) {\n        write(\"$\", \"\");\n        const line = input();        const args = line.split(\" \");\n        write(line);\n\n        if      (args[0] === \"end\"      ) { break;                                   }\n        else if (args[0] === \"setDriver\") { adapter.setDriver(args[1], +args[2]);    }\n        else if (args[0] === \"setPass\"  ) { adapter.setPassenger(args[1], +args[2]); }\n        else if (args[0] === \"drive\"    ) { adapter.drive(+args[1]);                 }\n        else if (args[0] === \"leavePass\") { adapter.leavePassenger();                }\n        else if (args[0] === \"show\"     ) { adapter.show();                          }\n        else                              { console.log(\"fail: command not found\");  }\n    }\n}\n\nmain();\n"
        }
    ]
}